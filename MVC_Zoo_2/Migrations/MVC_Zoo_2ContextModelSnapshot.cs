// <auto-generated />
using MVC_Zoo_2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_Zoo_2.Migrations
{
    [DbContext(typeof(MVC_Zoo_2Context))]
    partial class MVC_Zoo_2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_Zoo_2.Models.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Foto");

                    b.Property<string>("Nombre_cient");

                    b.Property<string>("Nombre_com");

                    b.HasKey("Id");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("MVC_Zoo_2.Models.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clima");

                    b.Property<int>("ItinerarioId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Vegetacion");

                    b.HasKey("Id");

                    b.HasIndex("ItinerarioId");

                    b.ToTable("Habitat");
                });

            modelBuilder.Entity("MVC_Zoo_2.Models.HabitatEspecie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EspecieId");

                    b.Property<int>("HabitatId");

                    b.Property<int>("Indice");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.HasIndex("HabitatId");

                    b.ToTable("HabitatEspecie");
                });

            modelBuilder.Entity("MVC_Zoo_2.Models.Itinerario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<int>("Duracion");

                    b.Property<int>("Longitud");

                    b.Property<int>("Visitantes");

                    b.HasKey("Id");

                    b.ToTable("Itinerario");
                });

            modelBuilder.Entity("MVC_Zoo_2.Models.Habitat", b =>
                {
                    b.HasOne("MVC_Zoo_2.Models.Itinerario", "Itinerario")
                        .WithMany("Habitat")
                        .HasForeignKey("ItinerarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVC_Zoo_2.Models.HabitatEspecie", b =>
                {
                    b.HasOne("MVC_Zoo_2.Models.Especie", "Especie")
                        .WithMany("HabitatEspecie")
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVC_Zoo_2.Models.Habitat", "Habitat")
                        .WithMany("HabitatEspecie")
                        .HasForeignKey("HabitatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
